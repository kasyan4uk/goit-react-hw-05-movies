{"version":3,"file":"static/js/349.f31e0db9.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx","utils/themoviedbAPI.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  margin-left: 15px;\n  margin-bottom: 15px;\n`;\n\nexport const Item = styled.li``;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n","import { GiFilmProjector } from 'react-icons/gi';\n\nimport { Item, List, StyledLink } from './MoviesList.styled';\n\nfunction MoviesList({ movies, location }) {\n  return (\n    <List>\n      {movies.map(movie => {\n        return (\n          <Item key={movie.id}>\n            <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n              <GiFilmProjector size={12} /> {movie.title}\n            </StyledLink>\n          </Item>\n        );\n      })}\n    </List>\n  );\n}\n\nexport default MoviesList;\n","import styled from 'styled-components';\nimport ReactPaginate from 'react-paginate';\n\nexport const StyledPaginate = styled(ReactPaginate)`\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n  margin: 10px 0;\n  font-size: 18px;\n  .selected {\n    color: red;\n  }\n  a {\n    padding: 10px 0;\n    cursor: pointer;\n    &:hover {\n      color: blue;\n    }\n  }\n`;\n","// import ReactPaginate from 'react-paginate';\nimport { StyledPaginate } from './Pagination.styled';\n\nfunction Paginator({ totalItems, itemsPerPage, setSearchParams, params }) {\n  const pageCount = Math.ceil(totalItems / itemsPerPage);\n\n  const handlePageClick = event => {\n    setSearchParams({ ...params, page: event.selected + 1 });\n  };\n\n  return (\n    <>\n      <StyledPaginate\n        breakLabel=\"...\"\n        nextLabel=\">\"\n        onPageChange={handlePageClick}\n        pageRangeDisplayed={4}\n        marginPagesDisplayed={2}\n        pageCount={pageCount}\n        previousLabel=\"<\"\n        renderOnZeroPageCount={null}\n      />\n    </>\n  );\n}\n\nexport default Paginator;\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  padding: 10px 0;\n`;\n","import { useState, useEffect, useMemo } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { getPopularMovies } from '../../utils/themoviedbAPI';\nimport Paginator from 'components/Pagination';\nimport MoviesList from 'components/MoviesList';\nimport { Title } from './Home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams({ page: 1 });\n  const location = useLocation();\n  const params = useMemo(\n    () => Object.fromEntries([...searchParams]),\n    [searchParams]\n  );\n  const page = Number(params.page);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const data = await getPopularMovies(page);\n        setMovies(data);\n      } catch (error) {\n        alert(error.message);\n      }\n    })();\n  }, [page]);\n\n  return (\n    <>\n      <Title>Trending today</Title>\n      {movies?.results && (\n        <>\n          <MoviesList movies={movies.results} location={location} />\n          <Paginator\n            itemsPerPage={20}\n            totalItems={movies.total_results}\n            setSearchParams={setSearchParams}\n            params={params}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '771e9e546d4a20d6aadc5378684f07f4',\n};\n\nexport const getPopularMovies = async (page = 1) => {\n  try {\n    const { data } = await axios.get('/trending/movie/day', {\n      params: {\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    toast.error('Oops, an error occurred');\n  }\n};\n\nexport const getMoviesByQuery = async (query, page = 1) => {\n  try {\n    const { data } = await axios.get('/search/movie', {\n      params: {\n        query,\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    toast.error('Oops, an error occurred');\n  }\n};\n\nexport const getMovieById = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}`);\n    return data;\n  } catch (error) {\n    toast.error('Oops, an error occurred');\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/credits`);\n    return data;\n  } catch (error) {\n    toast.error('Oops, an error occurred');\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/reviews`);\n    return data;\n  } catch (error) {\n    toast.error('Oops, an error occurred');\n  }\n};\n"],"names":["List","styled","Item","StyledLink","Link","movies","location","map","movie","to","id","state","from","size","title","StyledPaginate","ReactPaginate","totalItems","itemsPerPage","setSearchParams","params","pageCount","Math","ceil","breakLabel","nextLabel","onPageChange","event","page","selected","pageRangeDisplayed","marginPagesDisplayed","previousLabel","renderOnZeroPageCount","Title","useState","setMovies","useSearchParams","searchParams","useLocation","useMemo","Object","fromEntries","Number","useEffect","getPopularMovies","data","alert","message","results","MoviesList","total_results","axios","api_key","toast","getMoviesByQuery","query","getMovieById","movieId","getMovieCredits","getMovieReviews"],"sourceRoot":""}