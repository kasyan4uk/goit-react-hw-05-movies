{"version":3,"file":"static/js/422.74e44767.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","utils/themoviedbAPI.js"],"sourcesContent":["import { Link, NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const GoBackLink = styled(Link)`\n  font-size: 12px;\n  font-weight: 600;\n  width: 90px;\n  height: 22px;\n  border: 1px solid orange;\n  border-radius: 6px;\n  margin: 10px 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 6px;\n  text-decoration: none;\n  color: inherit;\n  background-color: orange;\n  color: black;\n  &:hover {\n    background-color: grey;\n    color: white;\n    border-color: grey;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  border-bottom: 2px solid #000;\n  padding-bottom: 10px;\n`;\n\nexport const Poster = styled.img`\n  height: 300px;\n`;\n\nexport const InfoThumb = styled.div`\n  margin-left: 15px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const FilmTitle = styled.h2`\n  font-size: 22px;\n`;\n\nexport const TextTitle = styled.h3`\n  font-size: 18px;\n`;\n\nexport const Text = styled.p`\n  font-size: 14px;\n  line-height: 1.5;\n`;\n\nexport const InfoTitle = styled.p`\n  margin: 15px 0;\n`;\n\nexport const InfoList = styled.ul`\n  display: flex;\n  gap: 20px;\n  border-bottom: 2px solid black;\n  padding-bottom: 30px;\n  margin-left: 15px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  .active {\n    color: orange;\n  }\n  color: blue;\n  &:hover {\n    color: orange;\n    text-decoration: none;\n  }\n`;\n","import { useEffect, useState, useRef, Suspense } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\nimport { getMovieById } from 'utils/themoviedbAPI';\nimport {\n  FilmTitle,\n  GoBackLink,\n  InfoList,\n  InfoThumb,\n  InfoTitle,\n  Poster,\n  StyledLink,\n  Text,\n  TextTitle,\n  Wrapper,\n} from './MovieDetails.styled';\n\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/movies');\n\n  const posterPath = `https://image.tmdb.org/t/p/w300${movie?.poster_path}`;\n  const genres = movie?.genres.map(genre => genre.name).join(' ');\n  const userScore = Math.round(movie?.vote_average * 10);\n  const releaseYear =\n    new Date(Date.parse(movie?.release_date)).getFullYear() || '';\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const data = await getMovieById(movieId);\n        setMovie(data);\n      } catch (error) {\n        alert(error.message);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <>\n      <GoBackLink to={backLink.current}>\n        {' '}\n        <AiOutlineArrowLeft />\n        <span>Go back</span>\n      </GoBackLink>\n      {movie && (\n        <Wrapper>\n          <Poster src={posterPath} alt={movie.title} height=\"200\" />\n          <InfoThumb>\n            <FilmTitle>\n              {movie.title} ({releaseYear})\n            </FilmTitle>\n            <Text>User Score: {userScore}%</Text>\n            <TextTitle>Overview</TextTitle>\n            <Text>{movie.overview}</Text>\n            <TextTitle>Genges</TextTitle>\n            <Text>{genres}</Text>\n          </InfoThumb>\n        </Wrapper>\n      )}\n      <InfoTitle>Additional information</InfoTitle>\n      <InfoList>\n        <li>\n          <StyledLink to=\"cast\">Cast</StyledLink>\n        </li>\n        <li>\n          <StyledLink to=\"reviews\">Reviews</StyledLink>\n        </li>\n      </InfoList>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '771e9e546d4a20d6aadc5378684f07f4',\n};\n\nexport const getPopularMovies = async (page = 1) => {\n  try {\n    const { data } = await axios.get('/trending/movie/day', {\n      params: {\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    toast.error('Oops, an error occurred');\n  }\n};\n\nexport const getMoviesByQuery = async (query, page = 1) => {\n  try {\n    const { data } = await axios.get('/search/movie', {\n      params: {\n        query,\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    toast.error('Oops, an error occurred');\n  }\n};\n\nexport const getMovieById = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}`);\n    return data;\n  } catch (error) {\n    toast.error('Oops, an error occurred');\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/credits`);\n    return data;\n  } catch (error) {\n    toast.error('Oops, an error occurred');\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/reviews`);\n    return data;\n  } catch (error) {\n    toast.error('Oops, an error occurred');\n  }\n};\n"],"names":["GoBackLink","styled","Link","Wrapper","Poster","InfoThumb","FilmTitle","TextTitle","Text","InfoTitle","InfoList","StyledLink","NavLink","movieId","useParams","useState","movie","setMovie","location","useLocation","backLink","useRef","state","from","posterPath","poster_path","genres","map","genre","name","join","userScore","Math","round","vote_average","releaseYear","Date","parse","release_date","getFullYear","useEffect","getMovieById","data","alert","message","to","current","src","alt","title","height","overview","Suspense","axios","api_key","getPopularMovies","page","params","toast","getMoviesByQuery","query","getMovieCredits","getMovieReviews"],"sourceRoot":""}